<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<!------ Include the above in your HEAD tag ---------->

<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>
<body>

<div class="messaging">
	
  <div class="inbox_msg">
	
	<div class="inbox_people">
		  
	  <div class="headind_srch">
		<div class="recent_heading">
		  <h4>Recent</h4>
		</div>
		<div >
		
			<a href="/logout"><button  type="button" class="btn btn-primary">logout</button></a>
			
		</div>
	  </div>
	  <div class="inbox_chat scroll">
		  {{#each users}}
		<div class="chat_list active_chat">
		  <div class="chat_people">
			<div class="chat_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
			<div class="chat_ib">
			  <h5>{{this.username}}<span class="chat_date">Dec 25</span></h5>
			  <p>Test, which is a new approach to have all solutions 
				astrology under one roof.</p>
			</div>
		  </div>
		</div>
		 {{/each }}
		
		
		
		
		
	  </div>
	</div>
	<div class="mesgs">
		 <div> <button id="clear" class="btn btn-primary" >clear</button>
		 </div>
	  <div class="msg_history">
		  <div id="chat">
			   <h3 id="username">{{username}}</h3><hr>
		  </div>
		 
		 
		<div class="incoming_msg">
		  <div class="incoming_msg_img"> <img src="https://ptetutorials.com/images/user-profile.png" alt="sunil"> </div>
		  <div class="received_msg">
			<div id="received_msg" class="received_withd_msg">
			  <p>Test which is a new approach
				</p>
			  {{!-- <span class="time_date"> 11:01 AM    |    June 9</span> --}}
			  </div>
		  </div>
		</div>
		<div class="outgoing_msg">
		  <div id="outgoing_msg" class="sent_msg">
			<p>Test which is a new approach to have all
			  solutions</p>
			{{!-- <span class="time_date"> 11:01 AM    | all   June 9</span>  --}}
			</div>
		</div>
		<div id="messages" class="card-block" style="height: 300px;"> 
			
		</div>
		
		
		
	  </div> 
	   <div id="status" style="color: red;"></div>   {{!-- status to be display --}}
	 
	  <div class="type_msg">
		
		<div class="input_msg_write">
			
		  <input type="text" id="textarea" class="write_msg" placeholder="Type a message" />
		  <button class="msg_send_btn" type="button"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
		</div>
	  </div>
	</div>
  </div>
</div>
{{!-- <script src="/socket.io/socket.io.js"></script>
<script>
	(function(){
		var element=function(id){
			return document.getElementById(id)
		}

		//get the elment 

		var status=element('status')
		{{!-- var received_msg=element('received_msg')
		var outgoing_msg=element('outgoing_msg') --}}
		var messages=element('messages')
		var textarea=element('textarea')
		var username=element('username').textContent
		var clearBtn=element('clear')

		console.log('messages',messages)
		console.log('usernameaaa',username)
		console.log('textarea',textarea)
		console.log('status',status)
		
		

		//set defaullt status
		var statusDefault=status.textContent

		var setStatus=function(s){
			//set status
			status.textContent=s

			if(s!==statusDefault){
				var delay=setTimeout(()=>{
					setStatus(statusDefault)
				},4000)
			}
		}

		//connect to socket.io
		var socket=io();
		if(socket!==undefined){
			console.log('connected to socket...........')

			//get the data from the server
			socket.on('output', function(data){
      console.log('dataaaaa',data);



	  if(data.length){
		  for(var i=0;i <data.length;i++){
			  //build out message div
			  var message=document.createElement('div')
			  console.log('message',message)
			  message.setAttribute('class','chat-message')
			  message.textContent=data[i].userName + ":" + data[i].userMessage
			  console.log('message.textContent',message.textContent)
			  messages.append(message)
			  messages.insertBefore(messages.firstChild,message)


	
		  }
	  }
    }); 
	//get status from the server
	socket.on('status',(data)=>{
		//get messages status
		setStatus((typeof data === 'object') ? data.message : data)

		//if status is clear, clear text
		if(data.clear){
			textarea.value = '';

		}
	})
		//handle the input value

	textarea.addEventListener('keydown',(event)=>{
		if(event.which === 13 && event.shiftKey == false){
			//emit to server input	
		var username=document.getElementById('username').innerHTML
			socket.emit('input',{
				name:username,
				message:textarea.value
				
				
			})
			
			event.preventDefault();
		}
	})

		}
	
	})();
	
	
</script> --}}
<script src="/socket.io/socket.io.js"></script>
<script>
	(function(){
		var element=function(id){
			return document.getElementById(id)
		}

		//get the elment 

		var status=element('status')
		{{!-- var received_msg=element('received_msg')
		var outgoing_msg=element('outgoing_msg') --}}
		var messages=element('messages')
		var textarea=element('textarea')
		var username=element('username').textContent
		var clearBtn=element('clear')

		console.log('messages',messages)
		console.log('usernameaaa',username)
		console.log('textarea',textarea)
		console.log('status',status)
		
		

		//set defaullt status
		var statusDefault=status.textContent

		var setStatus=function(s){
			//set status
			status.textContent=s

			if(s!==statusDefault){
				var delay=setTimeout(()=>{
					setStatus(statusDefault)
				},4000)
			}
		}

		//connect to socket.io
		var socket=io();
		if(socket!==undefined){
			console.log('connected to socket...........')

			//get the data from the server
			socket.on('output', function(data){
      console.log('dataaaaa',data);



	  if(data.length){
		  for(var i=0;i <data.length;i++){
			  //build out message div
			  var message=document.createElement('div')
			  console.log('message',message)
			  message.setAttribute('class','chat-message')
			  message.textContent=data[i].userName + ":" + data[i].userMessage
			  console.log('message.textContent',message.textContent)
			  messages.append(message)
			  messages.insertBefore(messages.firstChild,message)


	
		  }
	  }
    }); 
	//get status from the server
	socket.on('status',(data)=>{
		//get messages status
		setStatus((typeof data === 'object') ? data.message : data)

		//if status is clear, clear text
		if(data.clear){
			textarea.value = '';

		}
	})
		//handle the input value

	textarea.addEventListener('keydown',(event)=>{
		if(event.which === 13 && event.shiftKey == false){
			//emit to server input	
		var username=document.getElementById('username').innerHTML
			socket.emit('input',{
				name:username,
				message:textarea.value
				
				
			})
			
			event.preventDefault();
		}
	})

		}
	
	})();
	
	
</script>
</body>
</html>





 